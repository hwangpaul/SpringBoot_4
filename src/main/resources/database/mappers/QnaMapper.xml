<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
   	<mapper namespace="com.iu.sb4.board.qna.QnaMapper">
   	
   		<insert id="setInsert" parameterType="QnaVO" useGeneratedKeys="true" keyProperty="num">
    		insert into qna (num, title, writer, contents, regDate, hit, ref, step, depth) 
    		values (#{num}, #{title}, #{writer}, #{contents}, sysdate(), 0, #{num}, 0, 0)	
    	</insert>
    	
    	<update id="setRefUpdate" parameterType="QnaVO">
    		update qna set ref=#{num} where num=#{num}
    	</update>
    	
    	<sql id="getSearch">
   			<choose>
   				<when test="kind == 'title'">
   					title
   				</when>
   				
   				<when test="kind == 'writer'">
   					writer
   				</when>
   				
   				<otherwise>
   					contents
   				</otherwise>
   				
   			</choose>
   			like concat('%', #{search}, '%') and num>0 
   		
   		</sql>
   		
   		<select id="getCount" resultType="Long" parameterType="Pager">
   			select count(num) from notice where
   			<include refid="getSearch"></include>
   		
   		</select>
   	
   		<select id="getList" resultType="QnaVO" parameterType="Pager">
   			select * from qna where 
   			<include refid="getSearch"></include>
   			
   			order by num desc 
   			limit #{startRow}, #{perPage}
   			
   		</select>
   		
   		<select id="getOne" parameterType="QnaVO" resultMap="getOneResult">
    		select Q.*, QF.*
			from qna Q left join qnaFiles QF
			on Q.num = QF.num
			where Q.num = #{num}
       	</select>
       	
       	<resultMap type="QnaVO" id="getOneResult">
       		<id column="num" property="num"/>
       		<result column="writer" property="writer"/>
       		<result column="title" property="title"/>
       		<result column="contents" property="contents"/>
       		<result column="regDate" property="regDate"/>
       		<result column="hit" property="hit"/>
       		<result column="ref" property="ref"/>
       		<result column="step" property="step"/>
       		<result column="depth" property="depth"/>
       		<collection property="files" javaType="java.util.List" ofType="FileVO">
       			<id column="fnum" property="fnum"/>
       			<result column="fileName" property="fileName"/>
       			<result column="oriName" property="oriName"/>           			
       		</collection>
       		       	
       	</resultMap>
    	
    
    </mapper>